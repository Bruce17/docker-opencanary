---
name: 'build images'

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:
  docker:
    runs-on: ubuntu-latest
    
    env:
      # Fallback version for builds
      BUILD_VERSION: 0.5.5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare OpenCanary build version
        id: prep
        run: |
          PREPARED_BUILD_VERSION=${BUILD_VERSION}

          # If this is git tag, use the tag name
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            PREPARED_BUILD_VERSION=${GITHUB_REF#refs/tags/v}
          fi

          # Set output parameters.
          echo ::set-output name=prepared_build_version::${PREPARED_BUILD_VERSION}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKER_HUB_REPOSITORY }}
          tag-semver: |
            {{major}}.{{minor}}.{{patch}}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@master
        with:
          # platforms: all
          platforms: amd64,arm,arm64

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ steps.prep.outputs.prepared_build_version }}
