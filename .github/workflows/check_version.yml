---
name: 'check python package'

on:
  # FIXME: disabled for debugging
  # schedule:
  #   - cron: "0 0 * * 0"
  push:
    branches:
      - 'feature/*'

jobs:
  check:
    runs-on: ubuntu-latest

    env:
      PY_PACKAGE_NAME: opencanary

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Get latest package version
        uses: Bruce17/ghaction-package-latest-version@v1
        id: packageVersion
        with:
          package: ${{ env.PY_PACKAGE_NAME }}
          language: python
          conditions: |
            pythonVersion: py3
            requiresPython: 3.7

      - name: Get previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@1.0.0

      - name: Compare latest and tag version
        id: comparVersions
        shell: 'bash {0}'
        run: |
          echo "env:"
          env

          unset CREATE_TAG
          if [ "v${INPUT_LATEST_VERSION}" != "${INPUT_PREVIOUS_TAG}" ] && [ "${INPUT_LATEST_VERSION}" != "${INPUT_PREVIOUS_TAG}" ]; then
            CREATE_TAG="true"
          fi

          echo ::set-output name=hasNewVersion::${CREATE_TAG}
        env:
          latest_version: ${{ steps.packageVersion.outputs.latestVersion }}
          previous_tag: ${{ steps.previoustag.outputs.tag }}

      - name: Create a new tag
        uses: negz/create-tag@v1
        if: steps.comparVersions.outputs.hasNewVersion == 'true'
        with:
          version: v${{ steps.packageVersion.outputs.latestVersion }}
          message: ''
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new release for the new tag
        uses: actions/create-release@v1
        if: steps.comparVersions.outputs.hasNewVersion == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.packageVersion.outputs.latestVersion }}
          release_name: Release v${{ steps.packageVersion.outputs.latestVersion }}
          body: |
            Automatically created release by GitHub Action
          draft: true
          prerelease: false
